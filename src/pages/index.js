import Head from 'next/head'
import { Inter } from 'next/font/google'
import { Box, Button, ContentContainer, Text } from '../atoms'
import { Carousel } from '../organisms'
import { useAppContext } from '../context/AppContext'
import { icons } from '../organisms/layout/Colors'
import { useEffect, useState } from 'react'
import { menuItems } from '../permissions'
import { useRouter } from 'next/router'
import { getImageByScreen } from '../validators/api-requests'
import { api } from '../api/api'
import { Avatar } from '@mui/material'
import { formatDate } from '../helpers'

const inter = Inter({ subsets: ['latin'] })

const backgroundHome = [
   { name: 'slide-1', location: 'https://adm-melies.s3.amazonaws.com/slide-3.jpg' },
   { name: 'slide-2', location: 'https://adm-melies.s3.amazonaws.com/slide-5.jpg' },
]

const menuProfessor = [
   { id: '01', icon: '', text: 'Aulas do dia', to: '/academic/frequency/list', query: true },
   { id: '02', icon: '', text: 'LanÃ§ar nota', to: '/academic/studentGrade/list', query: true },
   { id: '03', icon: '', text: 'Atividade Complementar', to: '/', query: false },
   { id: '04', icon: '', text: 'CalendÃ¡rio AcadÃªmico', to: '/administrative/calendar/calendar', query: false },
   { id: '05', icon: '', text: 'Cronograma', to: '/administrative/classSchedule/list', query: false },
]

const birthDate = [
   { id: '01', name: 'Marcus Silva', day: 1, function: 'Desenvolvedor' },
   { id: '02', name: 'Felipe Bomfim', day: 13, function: 'Suporte' },
   { id: '03', name: 'Fulano Silva', day: 15, function: 'Suporte' },
   { id: '04', name: 'Renato Miranda', day: 5, function: 'Gerente Suporte' }
]

export default function Home() {

   const { user, colorPalette, theme, setLoading, alert } = useAppContext()
   const [menu, setMenu] = useState(menuItems)
   const [imagesList, setImagesList] = useState([])
   const [listBirthDay, setListBirthDay] = useState([])
   const [listClassesDay, setListClassesDay] = useState([])
   let isProfessor = user?.professor === 1 ? true : false;
   const userId = user?.id;

   const router = useRouter();


   const handleImages = async () => {
      setLoading(true)
      try {
         const response = await getImageByScreen('Inicio - Banner rotativo')
         if (response.status === 200) {
            setImagesList(response.data)
         }
      } catch (error) {
         return error
      } finally {
         setLoading(false)
      }
   }


   const handleBirthday = async () => {
      setLoading(true)
      try {
         const response = await api.get(`/user/list/birthdates`)
         if (response.status === 200) {
            setListBirthDay(response?.data)
         }
      } catch (error) {
         return error
      } finally {
         setLoading(false)
      }
   }

   const handleClassesDay = async () => {
      setLoading(true)
      try {
         const response = await api.get(`/classDay/month/now`)
         if (response.status === 200) {
            setListClassesDay(response?.data)
         }
      } catch (error) {
         console.log(error)
         return error
      } finally {
         setLoading(false)
      }
   }

   const handlePushNotification = async (id) => {
      setLoading(true)
      try {
         const notificationData = {
            titulo: `ParabÃ©ns!!`,
            menssagem: `${user?.nome} te desejou muitas felicidades no seu dia!`,
            vizualizado: 0,
            usuario_env: user?.id
         }
         const response = await api.post(`/notification/create/${id}`, { notificationData })
         if (response.status === 201) {
            alert.success('Mensagem de parabÃ©ns enviada!')
         }
      } catch (error) {
         console.log(error)
         return error
      } finally {
         setLoading(false)
      }
   }


   useEffect(() => {
      handleImages(imagesList)
      handleBirthday()
      handleClassesDay()
   }, [])

   const nowMonth = new Date().toLocaleString('pt-BR', { month: 'long' });
   const formattedMonth = nowMonth[0].toString().toLocaleUpperCase() + nowMonth.slice(1);


   return (
      <>
         <Head>
            <title>Administrativo MÃ©liÃ¨s</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <meta charset="utf-8" />
            <link rel="icon" href="https://adm-melies.s3.amazonaws.com/logo_vermelho_linhas_brancas.svg" />
         </Head>
         <Box sx={{ marginTop: { xs: 0, xm: -8, md: -8, lg: -8 } }}>
            <Box>
               <Box sx={{ display: 'flex', flexDirection: { xs: 'column', xm: 'row', md: 'row', lg: 'row' }, alignItems: 'center', gap: 2 }}>
                  <Text
                     bold
                     veryLarge
                     style={{ padding: { xs: '0', xm: '10px 0px 10px 0px', md: '10px 0px 10px 0px', lg: '10px 0px 10px 0px' }, display: 'flex', gap: 8 }}>
                     Bem-vindo,
                     <Text bold veryLarge style={{ color: colorPalette.buttonColor }}>
                        {user?.nome}!
                     </Text>
                  </Text>
                  <Text bold small>Se liga nas novidades...</Text>
               </Box>
               <Carousel
                  data={imagesList || backgroundHome}
                  style={{
                     backgroundColor: colorPalette.secondary,
                     borderRadius: '8px',
                     boxShadow: `rgba(149, 157, 165, 0.17) 0px 6px 24px`,
                  }}
                  heigth={{ xs: 200, xm: 480, md: 200, lg: 280, xl: 400 }}
                  width={'auto'}
               />
            </Box>
            <ContentContainer style={{ marginTop: '30px', boxShadow: 'none', backgroundColor: 'none', }}>
               <Text bold title={true} sx={{ padding: { xs: '0px 0px 20px 20px', xm: '0px 0px 20px 40px', md: '0px 0px 30px 0px', lg: '0px 0px 20px 80px' } }}>
                  Menu de fÃ¡cil acesso..</Text>
               {isProfessor ?
                  (<Box sx={{ display: 'flex', gap: 5, justifyContent: 'flex-start', flexWrap: { xs: 'wrap', xm: 'wrap', md: 'wrap', lg: 'wrap' }, display: { xs: 'flex', xm: 'flex', md: 'flex', lg: 'flex' } }}>
                     {menuProfessor?.map((group, index) => {

                        return (
                           <ContentContainer key={`${group}-${index}`} sx={{
                              alignItems: 'center', backgroundColor: colorPalette.buttonColor,
                              width: '200px',
                              transition: '.5s',
                              justifyContent: 'center',
                              "&:hover": {
                                 cursor: 'pointer',
                                 opacity: 0.8,
                                 transform: 'scale(1.1)',
                              }
                           }} onClick={() => {
                              group.query ?
                                 router.push(`${group.to}?id=${userId}`) : router.push(`${group.to}`)
                           }}>
                              <Text bold style={{ color: '#fff', transition: 'background-color 1s', textAlign: 'center' }}>
                                 {group.text}
                              </Text>
                           </ContentContainer>
                        )
                     })}

                  </Box>
                  )
                  :
                  (<Box sx={{ display: 'flex', gap: 5, justifyContent: 'center', flexWrap: { xs: 'wrap', xm: 'wrap', md: 'wrap', lg: 'wrap' }, display: { xs: 'flex', xm: 'flex', md: 'flex', lg: 'flex' } }}>

                     {menu?.map((group, index) =>
                        <ContentContainer key={`${group}-${index}`} sx={{
                           alignItems: 'center', backgroundColor: colorPalette.buttonColor,
                           minWidth: '180px',
                           transition: '.5s',
                           "&:hover": {
                              cursor: 'pointer',
                              opacity: 0.8,
                              transform: 'scale(1.1)',
                           }
                        }} onClick={() => router.push(group.to)}>
                           <Box sx={{ ...styles.icon, backgroundImage: `url(${group?.icon_dark})`, width: group?.text === 'Administrativo' ? 15 : 18, height: group.text === 'Administrativo' ? 24 : 18, filter: 'brightness(0) invert(1)', transition: 'background-color 1s' }} />
                           <Text bold style={{ color: '#fff', transition: 'background-color 1s', }}>
                              {group.text}
                           </Text>
                        </ContentContainer>
                     )}

                  </Box>
                  )
               }
            </ContentContainer>

            <ContentContainer row style={{ display: 'flex', marginTop: 5, backgroundColor: 'none', boxShadow: 'none', position: 'relative', alignItems: 'start', justifyContent: 'start' }}>

               <ContentContainer sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', gap: 1, maxHeight: 350, overflowY: 'auto' }}>
                  <Text large bold style={{ textAlign: 'center' }}>AniversÃ¡riantes de {formattedMonth} ðŸŽ‰ðŸŽ‰</Text>
                  <Box sx={{ display: 'flex', justifyContent: 'center', }}>
                     {listBirthDay.length > 0 ?
                        <Box sx={{ borderRadius: '8px', minWidth: '400px', display: 'flex', flexDirection: 'column', gap: 1 }}>
                           {listBirthDay?.map((item, index) => {
                              const date = item?.nascimento?.split('T')[0]
                              const day = date?.split('-')[2]
                              const month = date?.split('-')[1]
                              return (
                                 <ContentContainer row key={index} style={{ display: 'flex', backgroundColor: colorPalette?.primary, position: 'relative', boxShadow: 'none', alignItems: 'center', maxHeight: 100 }}>
                                    <Box sx={{ display: 'flex', borderRadius: 40, backgroundColor: colorPalette?.buttonColor, width: 40, height: 40, padding: '5px 5px', position: 'absolute', alignItems: 'center', justifyContent: 'center', top: 15, left: 10, zIndex: 999999 }}>
                                       <Text bold small style={{ color: '#fff' }}>{day}/{month}</Text>
                                    </Box>
                                    <Avatar src={item?.location} sx={{
                                       height: { xs: '100%', sm: 65, md: 65, lg: 65 },
                                       width: { xs: '100%', sm: 65, md: 65, lg: 65 },
                                    }} variant="circular"
                                    />
                                    <Box key={index} sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>
                                       <Box key={index} sx={{ display: 'flex', flexDirection: 'column' }}>
                                          <Text light bold>{item?.nome}</Text>
                                          <Text light>{item?.funcao || 'Nenhum(a)'}</Text>
                                       </Box>
                                    </Box>
                                    <Box key={index} sx={{ display: 'flex', position: 'absolute', right: 5, bottom: 10 }}>
                                       <Button small secondary text="Dar parabÃ©ns" onClick={() => handlePushNotification(item?.id)} />
                                    </Box>
                                 </ContentContainer>
                              )
                           })}
                        </Box>
                        :
                        <Box sx={{ backgroundColor: colorPalette.secondary, padding: '5px 10px' }}>
                           <Text >NÃ£o existem aniversÃ¡riantes nesse mÃªs</Text>
                        </Box>
                     }
                  </Box>
               </ContentContainer>

               <ContentContainer sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'start', alignItems: 'center', gap: 1, maxWidth: 500, maxHeight: 300, overflowY: 'auto' }}>
                  <Text large bold style={{ textAlign: 'center' }}>Aulas do dia</Text>
                  <Box sx={{ display: 'flex', justifyContent: 'center', }}>
                     {listClassesDay.length > 0 ?
                        <Box sx={{ borderRadius: '8px', minWidth: '400px', display: 'flex', flexDirection: 'column', gap: 1 }}>
                           {listClassesDay?.map((item, index) => {
                              const date = formatDate(item?.dt_aula)
                              const classDay = `${item?.nome_turma} - ${item?.nome_disciplina}`;
                              return (
                                 <ContentContainer row key={index} style={{
                                    display: 'flex',
                                    backgroundColor: colorPalette?.primary, boxShadow: 'none',
                                    position: 'relative',
                                    alignItems: 'center',
                                    maxHeight: 100,
                                    paddingTop: 7
                                 }}>
                                    <Box sx={{
                                       display: 'flex', borderRadius: 5,
                                       backgroundColor: colorPalette?.buttonColor,
                                       padding: '5px 5px',
                                       position: 'absolute',
                                       top: 3,  // Ajuste aqui para mover para cima
                                       left: 3, // Ajuste aqui para mover para a esquerda
                                       zIndex: 999999
                                    }}>
                                       <Text bold small style={{ color: '#fff' }}>{date}</Text>
                                    </Box>
                                    <Box key={index} sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>
                                       <Text light bold>{classDay}</Text>
                                       <Box key={index} sx={{ display: 'flex', flexDirection: 'column' }}>
                                          {item?.professor1 && <Box key={index} sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>
                                             <Text bold>1Âº professor: </Text>
                                             <Text light>{item?.professor1}</Text>
                                          </Box>}
                                          {item?.professor2 && <Box key={index} sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>
                                             <Text bold>2Âº professor: </Text>
                                             <Text light>{item?.professor2}</Text>
                                          </Box>}
                                       </Box>
                                    </Box>
                                 </ContentContainer>
                              )
                           })}
                        </Box>
                        :
                        <Box sx={{ backgroundColor: colorPalette.secondary, padding: '5px 10px' }}>
                           <Text >NÃ£o existem aulas cadastradas hoje.</Text>
                        </Box>
                     }
                  </Box>
               </ContentContainer>
            </ContentContainer>
         </Box>
      </>
   )
}

const styles = {
   icon: {
      backgroundSize: 'cover',
      backgroundRepeat: 'no-repeat',
      backgroundPosition: 'center center',
      width: '15px',
      height: '15px',
      marginRight: '0px',
      backgroundImage: `url('/favicon.svg')`,
   },
   menuIcon: {
      backgroundSize: 'cover',
      backgroundRepeat: 'no-repeat',
      backgroundPosition: 'center',
      width: 20,
      height: 20,

   },
}