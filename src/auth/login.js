import { useEffect, useState } from "react"
import { useAppContext } from "../context/AppContext"
import { emailValidator } from "../helpers"
import { Colors, IconTheme } from "../organisms"
import { Box, Button, ContentContainer, TextInput, Text } from "../atoms"
import Image from "next/image"
import Head from "next/head"
import { getImageByScreen } from "../validators/api-requests"

export default function Login() {

    const { login, alert, theme, colorPalette } = useAppContext()
    const [userData, setUserData] = useState([])
    const [themeName, setThemeName] = useState('')
    const [imagesList, setImagesList] = useState([])
    const [windowWidth, setWindowWidth] = useState(0)
    const smallWidthDevice = windowWidth < 1000
    const notebookWidth = windowWidth > 1100 && windowWidth < 1500

    const handleImages = async () => {
        try {
            const response = await getImageByScreen('Login')
            if (response.status === 200) {
                setImagesList(response.data)
            }
        } catch (error) {
            return error
        }
    }

    useEffect(() => {
        handleImages()
    }, [])

    useEffect(() => {
        const themeAltern = theme ? setThemeName('dark') : setThemeName('clear')
        return themeAltern
    }, [theme])

    const handleLogin = async () => {
        const { email, senha } = userData

        if (!email) {

            return alert.error("O email está inválido!")
        }

        if (email.includes('@')) {
            if (!emailValidator(email)) {
                return alert.error("O email está inválido!")
            }
        }

        if (!senha || senha.length < 4) { return alert.error('A senha deve conter no mínimo 4 digitos.') }


        const data = await login({ email, senha })

        if (data === 0) {
            return alert.error('Desculpe. Você não tem acesso ao painel administrativo. Consulte o Suporte Melies.')
        }

        if (!data) {
            return alert.error('Usuário não encontrado ou senha incorreta. Verifique os dados e tente novamente!')
        }
    }

    const handleChange = (value) => {
        setUserData((prevValues) => ({
            ...prevValues,
            [value.target.name]: value.target.value,
        }))
    }

    useEffect(() => {
        setWindowWidth(window.innerWidth)
        window.addEventListener('resize', () => setWindowWidth(window.innerWidth))
        document.title = `Admin Meliés`
        return () => window.removeEventListener('resize', () => { });
    }, [])

    return (
        <>
            <Head>
                <title>Administrativo Méliès - Login</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <meta charset="utf-8" />
                <link rel="icon" href="https://adm-melies.s3.amazonaws.com/logo_vermelho_linhas_brancas.svg" />
            </Head>
            <Box sx={{
                display: 'flex',
                justifyContent: 'center',
                alignItems: 'center',
                backgroundColor: theme ? '#F2F4F8' : Colors.backgroundPrimary,
                transition: 'background-color 1s',
                position: 'absolute',
                top: 0,
                left: 0,
                width: '100%', height: '100%'
            }}>
                <Box sx={{
                    display: 'flex',
                    ...(smallWidthDevice ? { height: '70%', width: '90%' } : { height: { md: '480px', lg: '603px' }, width: { md: '700px', lg: '895px' } })
                }}>
                    <ContentContainer row fullWidth style={{ borderRadius: '16px', padding: 0, zIndex: 999, transition: 'background-color 1s', backgroundColor: !theme ? Colors.backgroundSecundary : '#FFFFFF', boxShadow: !theme ? 'none' : `rgba(149, 157, 165, 0.17) 0px 6px 24px` }} gap={0}>

                        <Box sx={{
                            display: 'flex',
                            flexDirection: 'column',
                            justifyContent: 'center',
                            alignItems: 'center',
                            flex: 1,
                            gap: 3,
                            backgroundColor: Colors.darkBlue,
                            position: 'relative'
                        }}>

                            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3, alignItems: 'center', width: smallWidthDevice ? '80%' : '100%', }}>
                                {/* {!smallWidthDevice ? <></> : <CompanyLogo theme={theme} size={40} />} */}
                                <Box sx={{ display: 'flex', flexDirection: 'row', gap: 2, alignItems: 'center', width: '62%', }}>
                                    <Text bold style={{ color: !theme ? '#fff' : Colors.backgroundPrimary, fontSize: '35px', transition: 'background-color 1s' }}>Login</Text>
                                    <Box sx={{ backgroundColor: colorPalette.buttonColor, transition: 'background-color 1s', borderRadius: '16px', padding: '2px 12px 2px 12px' }}>
                                        <Text small bold style={{ color: colorPalette.textColor, transition: 'background-color 1s', fontWeight: 'bold' }}>{'ADMIN'}</Text>
                                    </Box>
                                </Box>
                                <Box sx={{
                                    display: 'flex', flexDirection: 'column', gap: 2, width: { xs: `80%`, xm: `80%`, md: '62.5%', lg: '62.5%' }, justifyContent: 'center',
                                    // alignItems: 'center',
                                }}>
                                    <TextInput
                                        label='e-mail'
                                        placeholder='email@outlook.com.br'
                                        value={userData?.email || ''}
                                        onChange={handleChange}
                                        name='email'
                                        margin='none'
                                        InputProps={{
                                            style: {
                                                backgroundColor: !theme ? '#1B1829' : Colors.background,
                                                transition: 'background-color 1s',
                                                border: "none",
                                                color: !theme ? '#fff' : Colors.backgroundPrimary,
                                                outline: 'none',
                                                borderRadius: '16px',
                                                // // width: '280px',
                                            }
                                        }}
                                        InputLabelProps={{
                                            style: {
                                                color: !theme ? '#fff' : Colors.backgroundPrimary,
                                                transition: 'background-color 1s',
                                                // width: '280px',
                                            }
                                        }}
                                    />
                                    <TextInput
                                        placeholder='******'
                                        label='senha'
                                        colorLabel={'#fff'}
                                        value={userData.senha || ''}
                                        onChange={handleChange}
                                        name='senha'
                                        type="password"
                                        margin='none'
                                        InputProps={{
                                            style: {
                                                backgroundColor: !theme ? '#1B1829' : Colors.background,
                                                transition: 'background-color 1s',
                                                color: !theme ? '#ffffffbb' : Colors.backgroundPrimary,
                                                outline: 'none',
                                                borderRadius: '16px',
                                                // width: '280px',
                                            }
                                        }}
                                        InputLabelProps={{
                                            style: {
                                                color: !theme ? '#fff' : Colors.backgroundPrimary,
                                                transition: 'background-color 1s',
                                            }
                                        }}
                                    />
                                </Box>
                                <Button
                                    style={{ width: { xs: `80%`, xm: `80%`, md: '60%', lg: '60%' }, padding: '12px 20px', marginBottom: 5, borderRadius: '100px' }}
                                    text='Entrar'
                                    onClick={handleLogin}
                                />
                            </Box>
                            <Box>
                            {smallWidthDevice ? <Box sx={{ ...styles.favicon, backgroundImage: theme ? `url('/favicon.png')` : `url('/icons/favicon_dark.png')`, marginRight: 11, marginLeft: 0, }} />
                                :
                                <Box sx={{ ...styles.favicon, backgroundImage: theme ? `url('/favicon.png')` : `url('/icons/favicon_dark.png')`, marginRight: !notebookWidth ? 16 : 6, marginLeft: 0, width: !notebookWidth ? '140px' : '120px', }} />}
                            </Box>
                        </Box>
                        {smallWidthDevice ? <></> : <CompanyLogo theme={theme} images={imagesList} size={14} />}
                    </ContentContainer>
                </Box>
                {/* <Box sx={{
                display: 'flex',
                position: 'absolute',
                backgroundColor: !theme ? Colors.backgroundPrimary : '#F2F4F8 ',
                transition: 'background-color 1s',
                top: 20,
                left: 20,
                padding: '5px 20px',
                borderRadius: '5px',
                "&:hover": {
                    opacity: 0.8,
                    cursor: 'pointer'
                }
            }} onClick={() => setTheme(!theme)}>
                <Box sx={{ ...styles.icon, backgroundImage: theme ? `url('/icons/theme_icon.png')` : `url('/icons/theme_icon_dark.png')`, color: theme ? '#fff' : Colors.backgroundPrimary, transition: 'background-color 1s', }} />
            </Box> */}
                <IconTheme left />
            </Box>
        </>
    )
}

const CompanyLogo = ({ size = 14, style = {}, theme = {}, images = [] }) => {

    const imageUrl = images.filter(item => item?.tipo === (theme ? 'tema-claro' : 'tema-escuro')).map(image => image?.location)

    return (
        < Box sx={{
            display: 'flex',
            flexDirection: 'column',
            // justifyContent: 'center',
            alignItems: 'end',
            // height: '603px', width: '428px',
            transition: 'background-color 1s',
            flex: 1,
            gap: 1,
            ...style
        }}>
            <img src={imageUrl} alt="Admin-melies" style={{ height: '100%', width: 'auto' }} />
        </Box >
    )
};

const styles = {
    favicon: {
        backgroundSize: 'cover',
        display: 'flex',
        backgroundRepeat: 'no-repeat',
        backgroundPosition: 'center center',
        backgroundSize: 'contain',
        width: '140px',
        height: '67px',
        marginLeft: 12,
        // backgroundColor: 'pink'
    },
    icon: {
        width: '30px',
        height: '30px'
    }
}